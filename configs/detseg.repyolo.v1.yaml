# YOLOv5 ðŸš€ by Ultralytics, GPL-3.0 license

# Parameters
nc: 3  # number of classes
num_output: [1]
depth_multiple: 1  # model depth multiple
width_multiple: 1  # layer channel multiple
anchors:
  - [10,13, 16,30, 33,23]  # P3/8
  - [30,61, 62,45, 59,119]  # P4/16
  - [116,90, 156,198, 373,326]  # P5/32

# YOLOv5 v6.0 backbone
backbone:
# conv(inp, oup, ks, stride, padding , groups, dilation, act)
# RepConv(c1, c2, k=3, s=1, p=None, g=1, act=True, deploy=False)
# [from, number, module, args]
  [[-1, 1,  RepConv,   [48,  3, 2, 1, 1, 'ReLU']],  # 0-P1/2
   [-1, 2,  RepBlocks, [48,  3, 2, 1, 1, 'ReLU']],  # 1-P2/4
   [-1, 4,  RepBlocks, [96,  3, 2, 1, 1, 'ReLU']],  # 2-P3/8
   [-1, 14, RepBlocks, [192, 3, 2, 1, 1, 'ReLU']],  # 3-P4/16
   [-1, 1,  RepConv,   [512, 3, 2, 1, 1, 'ReLU']],  # 4-P5/32
   [-1, 1,  SPPF,      [512, 5, 'SiLU']],      # 5
  ]

# YOLOv5 v6.0 head
head:
  [[-1, 1, Conv, [256, 1, 1, 0, 1, 1, 'SiLU']],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 3], 1, Concat, [1]],  # cat backbone P4
   [-1, 1, C3, [256, False, 1, 0.5, 'SiLU']],  # 9

   [-1, 1, Conv, [128, 1, 1, 0, 1, 1, 'SiLU']],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 2], 1, Concat, [1]],  # cat backbone P3
   [-1, 1, C3, [128, False, 1, 0.5, 'SiLU']],  # 13 (P3/8-small)

   [-1, 1, Conv, [128, 3, 2, 1, 1, 1, 'SiLU']],
   [[-1, 10], 1, Concat, [1]],  # cat head P4
   [-1, 1, C3, [256, False, 1, 0.5, 'SiLU']],  # 16 (P4/16-medium)

   [-1, 1, Conv, [256, 3, 2, 1, 1, 1, 'SiLU']],
   [[-1, 6], 1, Concat, [1]],  # cat head P5
   [-1, 1, C3, [512, False, 1, 0.5, 'SiLU']],  # 19 (P5/32-large)

   # seg head, just share the same backbone
   [5, 1, Conv, [256, 1, 1, 0, 1, 1, 'ReLU']],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 3], 1, Concat, [1]],  # cat backbone P4
   [-1, 3, C3, [256, False, 1, 0.5, 'ReLU']],  # 23

   [-1, 1, Conv, [128, 1, 1, 0, 1, 1, 'ReLU']],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 2], 1, Concat, [1]],  # cat backbone P3
   [-1, 3, C3, [128, False, 1, 0.5, 'ReLU']],  # 27 (P3/8-small)

   [-1, 1, Conv, [256, 1, 1, 0, 1, 1, 'ReLU']],
   [-1, 1, nn.Upsample, [None, 4, 'nearest']], # 29 p2/
   [-1, 3, C3, [32, False, 1, 0.5, 'ReLU']],  
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [-1, 1, Conv, [16, 3, 1, 1, 1, 1, 'ReLU']],
   [-1, 1, nn.Conv2d, [1, 1, 1, 0]],  # 33 (P3/8-small)

   [[13, 16, 19, 33], 1, DetSegHead, [nc, anchors]],  # 20  Detect(P3, P4, P5)
  ]